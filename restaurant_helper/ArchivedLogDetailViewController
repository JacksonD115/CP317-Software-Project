// Gives full details of selected log from the ArchivedLogsViewController


import Foundation
import UIKit

class ArchivedLogDetailViewController: UIViewController, UITableViewDelegate, UITableViewDataSource {

    private let tableView = UITableView()
    private var archivedLog: ArchivedLog

    init(archivedLog: ArchivedLog) {
        self.archivedLog = archivedLog
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        
        // Set up the table view
        setupTableView()
    }

    private func setupTableView() {
        view.addSubview(tableView)
        tableView.translatesAutoresizingMaskIntoConstraints = false
        tableView.delegate = self
        tableView.dataSource = self
        tableView.register(UITableViewCell.self, forCellReuseIdentifier: "logDetailCell")
        
        NSLayoutConstraint.activate([
            tableView.topAnchor.constraint(equalTo: view.topAnchor),
            tableView.leftAnchor.constraint(equalTo: view.leftAnchor),
            tableView.rightAnchor.constraint(equalTo: view.rightAnchor),
            tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor)
        ])
    }

    func numberOfSections(in tableView: UITableView) -> Int {
        return 4 // Start Time, Messages, Orders, End Time
    }

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        switch section {
        case 0: // Start Time
            return 1
        case 1: // Messages
            return archivedLog.messages.count
        case 2: // Orders
            return archivedLog.orders.count + 1
        case 3: // End Time
            return 1
        default:
            return 0
        }
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "logDetailCell", for: indexPath)
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "MM/dd/yyyy HH:mm:ss"

        switch indexPath.section {
        case 0: // Start Time
            let startTimeStr = archivedLog.startTime != nil ? dateFormatter.string(from: archivedLog.startTime!) : "N/A"
            cell.textLabel?.text = "Arrived at table at: \(startTimeStr)"
        case 1: // Messages
            let (message, timestamp) = archivedLog.messages[indexPath.row]
            cell.textLabel?.text = "\(dateFormatter.string(from: timestamp)): \(message)"
        case 2: // Orders
            if indexPath.row < archivedLog.orders.count {
                let (order, timestamp, timeTaken, totalCost) = archivedLog.orders[indexPath.row]
                cell.textLabel?.text = """
                \(dateFormatter.string(from: timestamp)):
                \(order)
                Order Time: \(timeTaken ?? "0")
                """
            } else {
                // Display the total price in the last row of the Orders section
                //let grandTotal = archivedLog.orders.reduce(0.0) { $0 + $1.3 }
                cell.textLabel?.text = "Total Cost: $\(String(format: "%.2f", archivedLog.totalCost ?? 0.00))"
                cell.textLabel?.font = UIFont.boldSystemFont(ofSize: 16) // Make it stand out
                cell.textLabel?.textAlignment = .right
            }
        case 3: // End Time
            let endTimeStr = archivedLog.timestamp != nil ? dateFormatter.string(from: archivedLog.timestamp) : "N/A"
            cell.textLabel?.text = "Left table at: \(endTimeStr)"
        default:
            break
        }
        
        cell.textLabel?.numberOfLines = 0
        return cell
    }

    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
        switch section {
        case 1:
            return "Messages"
        case 2:
            return "Orders"
        default:
            return nil
        }
    }
}
